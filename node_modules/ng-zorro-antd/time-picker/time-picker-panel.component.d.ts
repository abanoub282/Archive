/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, DebugElement, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { BooleanInput } from 'ng-zorro-antd/core/types';
import { DateHelperService } from 'ng-zorro-antd/i18n';
import { TimeHolder } from './time-holder';
import { NzTimeValueAccessorDirective } from './time-value-accessor.directive';
import * as ɵngcc0 from '@angular/core';
export declare type NzTimePickerUnit = 'hour' | 'minute' | 'second' | '12-hour';
export declare class NzTimePickerPanelComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {
    private cdr;
    dateHelper: DateHelperService;
    static ngAcceptInputType_nzUse12Hours: BooleanInput;
    private _nzHourStep;
    private _nzMinuteStep;
    private _nzSecondStep;
    private unsubscribe$;
    private onChange?;
    private onTouch?;
    private _format;
    private _disabledHours?;
    private _disabledMinutes?;
    private _disabledSeconds?;
    private _allowEmpty;
    time: TimeHolder;
    hourEnabled: boolean;
    minuteEnabled: boolean;
    secondEnabled: boolean;
    firstScrolled: boolean;
    enabledColumns: number;
    hourRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    minuteRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    secondRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    use12HoursRange: ReadonlyArray<{
        index: number;
        value: string;
    }>;
    nzTimeValueAccessorDirective?: NzTimeValueAccessorDirective;
    hourListElement?: DebugElement;
    minuteListElement?: DebugElement;
    secondListElement?: DebugElement;
    use12HoursListElement?: DebugElement;
    nzInDatePicker: boolean;
    nzAddOn?: TemplateRef<void>;
    nzHideDisabledOptions: boolean;
    nzClearText?: string;
    nzPlaceHolder?: string;
    nzUse12Hours: boolean;
    nzDefaultOpenValue?: Date;
    readonly closePanel: EventEmitter<void>;
    set nzAllowEmpty(value: boolean);
    get nzAllowEmpty(): boolean;
    set nzDisabledHours(value: undefined | (() => number[]));
    get nzDisabledHours(): undefined | (() => number[]);
    set nzDisabledMinutes(value: undefined | ((hour: number) => number[]));
    get nzDisabledMinutes(): undefined | ((hour: number) => number[]);
    set nzDisabledSeconds(value: undefined | ((hour: number, minute: number) => number[]));
    get nzDisabledSeconds(): undefined | ((hour: number, minute: number) => number[]);
    set format(value: string);
    get format(): string;
    set nzHourStep(value: number);
    get nzHourStep(): number;
    set nzMinuteStep(value: number);
    get nzMinuteStep(): number;
    set nzSecondStep(value: number);
    get nzSecondStep(): number;
    selectInputRange(): void;
    buildHours(): void;
    buildMinutes(): void;
    buildSeconds(): void;
    build12Hours(): void;
    buildTimes(): void;
    scrollToTime(delay?: number): void;
    selectHour(hour: {
        index: number;
        disabled: boolean;
    }): void;
    selectMinute(minute: {
        index: number;
        disabled: boolean;
    }): void;
    selectSecond(second: {
        index: number;
        disabled: boolean;
    }): void;
    select12Hours(value: {
        index: number;
        value: string;
    }): void;
    scrollToSelected(instance: HTMLElement, index: number, duration: number | undefined, unit: NzTimePickerUnit): void;
    translateIndex(index: number, unit: NzTimePickerUnit): number;
    scrollTo(element: HTMLElement, to: number, duration: number): void;
    calcIndex(array: number[] | undefined, index: number): number;
    protected changed(): void;
    protected touched(): void;
    timeDisabled(value: Date): boolean;
    onClickNow(): void;
    isSelectedHour(hour: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelectedMinute(minute: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelectedSecond(second: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelected12Hours(value: {
        index: number;
        value: string;
    }): boolean;
    constructor(cdr: ChangeDetectorRef, dateHelper: DateHelperService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(value: Date): void;
    registerOnChange(fn: (value: Date) => void): void;
    registerOnTouched(fn: () => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTimePickerPanelComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTimePickerPanelComponent, "nz-time-picker-panel", ["nzTimePickerPanel"], {
    "nzInDatePicker": "nzInDatePicker";
    "nzHideDisabledOptions": "nzHideDisabledOptions";
    "nzUse12Hours": "nzUse12Hours";
    "nzAllowEmpty": "nzAllowEmpty";
    "nzDisabledHours": "nzDisabledHours";
    "nzDisabledMinutes": "nzDisabledMinutes";
    "nzDisabledSeconds": "nzDisabledSeconds";
    "format": "format";
    "nzHourStep": "nzHourStep";
    "nzMinuteStep": "nzMinuteStep";
    "nzSecondStep": "nzSecondStep";
    "nzAddOn": "nzAddOn";
    "nzClearText": "nzClearText";
    "nzPlaceHolder": "nzPlaceHolder";
    "nzDefaultOpenValue": "nzDefaultOpenValue";
}, {
    "closePanel": "closePanel";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1waWNrZXItcGFuZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpbWUtcGlja2VyLXBhbmVsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5SEEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIERlYnVnRWxlbWVudCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCb29sZWFuSW5wdXQgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgRGF0ZUhlbHBlclNlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgVGltZUhvbGRlciB9IGZyb20gJy4vdGltZS1ob2xkZXInO1xuaW1wb3J0IHsgTnpUaW1lVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSB9IGZyb20gJy4vdGltZS12YWx1ZS1hY2Nlc3Nvci5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOelRpbWVQaWNrZXJVbml0ID0gJ2hvdXInIHwgJ21pbnV0ZScgfCAnc2Vjb25kJyB8ICcxMi1ob3VyJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VGltZVBpY2tlclBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIGRhdGVIZWxwZXI6IERhdGVIZWxwZXJTZXJ2aWNlO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelVzZTEySG91cnM6IEJvb2xlYW5JbnB1dDtcbiAgICBwcml2YXRlIF9uekhvdXJTdGVwO1xuICAgIHByaXZhdGUgX256TWludXRlU3RlcDtcbiAgICBwcml2YXRlIF9uelNlY29uZFN0ZXA7XG4gICAgcHJpdmF0ZSB1bnN1YnNjcmliZSQ7XG4gICAgcHJpdmF0ZSBvbkNoYW5nZT87XG4gICAgcHJpdmF0ZSBvblRvdWNoPztcbiAgICBwcml2YXRlIF9mb3JtYXQ7XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWRIb3Vycz87XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWRNaW51dGVzPztcbiAgICBwcml2YXRlIF9kaXNhYmxlZFNlY29uZHM/O1xuICAgIHByaXZhdGUgX2FsbG93RW1wdHk7XG4gICAgdGltZTogVGltZUhvbGRlcjtcbiAgICBob3VyRW5hYmxlZDogYm9vbGVhbjtcbiAgICBtaW51dGVFbmFibGVkOiBib29sZWFuO1xuICAgIHNlY29uZEVuYWJsZWQ6IGJvb2xlYW47XG4gICAgZmlyc3RTY3JvbGxlZDogYm9vbGVhbjtcbiAgICBlbmFibGVkQ29sdW1uczogbnVtYmVyO1xuICAgIGhvdXJSYW5nZTogUmVhZG9ubHlBcnJheTx7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0+O1xuICAgIG1pbnV0ZVJhbmdlOiBSZWFkb25seUFycmF5PHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgfT47XG4gICAgc2Vjb25kUmFuZ2U6IFJlYWRvbmx5QXJyYXk8e1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB9PjtcbiAgICB1c2UxMkhvdXJzUmFuZ2U6IFJlYWRvbmx5QXJyYXk8e1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICB2YWx1ZTogc3RyaW5nO1xuICAgIH0+O1xuICAgIG56VGltZVZhbHVlQWNjZXNzb3JEaXJlY3RpdmU/OiBOelRpbWVWYWx1ZUFjY2Vzc29yRGlyZWN0aXZlO1xuICAgIGhvdXJMaXN0RWxlbWVudD86IERlYnVnRWxlbWVudDtcbiAgICBtaW51dGVMaXN0RWxlbWVudD86IERlYnVnRWxlbWVudDtcbiAgICBzZWNvbmRMaXN0RWxlbWVudD86IERlYnVnRWxlbWVudDtcbiAgICB1c2UxMkhvdXJzTGlzdEVsZW1lbnQ/OiBEZWJ1Z0VsZW1lbnQ7XG4gICAgbnpJbkRhdGVQaWNrZXI6IGJvb2xlYW47XG4gICAgbnpBZGRPbj86IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIG56SGlkZURpc2FibGVkT3B0aW9uczogYm9vbGVhbjtcbiAgICBuekNsZWFyVGV4dD86IHN0cmluZztcbiAgICBuelBsYWNlSG9sZGVyPzogc3RyaW5nO1xuICAgIG56VXNlMTJIb3VyczogYm9vbGVhbjtcbiAgICBuekRlZmF1bHRPcGVuVmFsdWU/OiBEYXRlO1xuICAgIHJlYWRvbmx5IGNsb3NlUGFuZWw6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBzZXQgbnpBbGxvd0VtcHR5KHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgbnpBbGxvd0VtcHR5KCk6IGJvb2xlYW47XG4gICAgc2V0IG56RGlzYWJsZWRIb3Vycyh2YWx1ZTogdW5kZWZpbmVkIHwgKCgpID0+IG51bWJlcltdKSk7XG4gICAgZ2V0IG56RGlzYWJsZWRIb3VycygpOiB1bmRlZmluZWQgfCAoKCkgPT4gbnVtYmVyW10pO1xuICAgIHNldCBuekRpc2FibGVkTWludXRlcyh2YWx1ZTogdW5kZWZpbmVkIHwgKChob3VyOiBudW1iZXIpID0+IG51bWJlcltdKSk7XG4gICAgZ2V0IG56RGlzYWJsZWRNaW51dGVzKCk6IHVuZGVmaW5lZCB8ICgoaG91cjogbnVtYmVyKSA9PiBudW1iZXJbXSk7XG4gICAgc2V0IG56RGlzYWJsZWRTZWNvbmRzKHZhbHVlOiB1bmRlZmluZWQgfCAoKGhvdXI6IG51bWJlciwgbWludXRlOiBudW1iZXIpID0+IG51bWJlcltdKSk7XG4gICAgZ2V0IG56RGlzYWJsZWRTZWNvbmRzKCk6IHVuZGVmaW5lZCB8ICgoaG91cjogbnVtYmVyLCBtaW51dGU6IG51bWJlcikgPT4gbnVtYmVyW10pO1xuICAgIHNldCBmb3JtYXQodmFsdWU6IHN0cmluZyk7XG4gICAgZ2V0IGZvcm1hdCgpOiBzdHJpbmc7XG4gICAgc2V0IG56SG91clN0ZXAodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IG56SG91clN0ZXAoKTogbnVtYmVyO1xuICAgIHNldCBuek1pbnV0ZVN0ZXAodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IG56TWludXRlU3RlcCgpOiBudW1iZXI7XG4gICAgc2V0IG56U2Vjb25kU3RlcCh2YWx1ZTogbnVtYmVyKTtcbiAgICBnZXQgbnpTZWNvbmRTdGVwKCk6IG51bWJlcjtcbiAgICBzZWxlY3RJbnB1dFJhbmdlKCk6IHZvaWQ7XG4gICAgYnVpbGRIb3VycygpOiB2b2lkO1xuICAgIGJ1aWxkTWludXRlcygpOiB2b2lkO1xuICAgIGJ1aWxkU2Vjb25kcygpOiB2b2lkO1xuICAgIGJ1aWxkMTJIb3VycygpOiB2b2lkO1xuICAgIGJ1aWxkVGltZXMoKTogdm9pZDtcbiAgICBzY3JvbGxUb1RpbWUoZGVsYXk/OiBudW1iZXIpOiB2b2lkO1xuICAgIHNlbGVjdEhvdXIoaG91cjoge1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB9KTogdm9pZDtcbiAgICBzZWxlY3RNaW51dGUobWludXRlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiB2b2lkO1xuICAgIHNlbGVjdFNlY29uZChzZWNvbmQ6IHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgfSk6IHZvaWQ7XG4gICAgc2VsZWN0MTJIb3Vycyh2YWx1ZToge1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICB2YWx1ZTogc3RyaW5nO1xuICAgIH0pOiB2b2lkO1xuICAgIHNjcm9sbFRvU2VsZWN0ZWQoaW5zdGFuY2U6IEhUTUxFbGVtZW50LCBpbmRleDogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkLCB1bml0OiBOelRpbWVQaWNrZXJVbml0KTogdm9pZDtcbiAgICB0cmFuc2xhdGVJbmRleChpbmRleDogbnVtYmVyLCB1bml0OiBOelRpbWVQaWNrZXJVbml0KTogbnVtYmVyO1xuICAgIHNjcm9sbFRvKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCB0bzogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKTogdm9pZDtcbiAgICBjYWxjSW5kZXgoYXJyYXk6IG51bWJlcltdIHwgdW5kZWZpbmVkLCBpbmRleDogbnVtYmVyKTogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBjaGFuZ2VkKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHRvdWNoZWQoKTogdm9pZDtcbiAgICB0aW1lRGlzYWJsZWQodmFsdWU6IERhdGUpOiBib29sZWFuO1xuICAgIG9uQ2xpY2tOb3coKTogdm9pZDtcbiAgICBpc1NlbGVjdGVkSG91cihob3VyOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWRNaW51dGUobWludXRlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWRTZWNvbmQoc2Vjb25kOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWQxMkhvdXJzKHZhbHVlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgfSk6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgZGF0ZUhlbHBlcjogRGF0ZUhlbHBlclNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBEYXRlKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiAodmFsdWU6IERhdGUpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZDtcbn1cbiJdfQ==