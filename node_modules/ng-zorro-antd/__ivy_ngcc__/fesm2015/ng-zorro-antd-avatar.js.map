{"version":3,"file":"ng-zorro-antd-avatar.js","sources":["ng:/ng-zorro-antd/avatar/avatar.component.ts","ng:/ng-zorro-antd/avatar/avatar.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NgClassInterface, NgStyleInterface, NzShapeSCType, NzSizeLDSType } from 'ng-zorro-antd/core/types';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'avatar';\n\n@Component({\n  selector: 'nz-avatar',\n  exportAs: 'nzAvatar',\n  template: `\n    <i nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></i>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl [ngStyle]=\"textStyles\" *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n  host: {\n    '[class.ant-avatar]': 'true',\n    '[class.ant-avatar-lg]': `nzSize === 'large'`,\n    '[class.ant-avatar-sm]': `nzSize === 'small'`,\n    '[class.ant-avatar-square]': `nzShape === 'square'`,\n    '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n    '[class.ant-avatar-icon]': `nzIcon`,\n    '[class.ant-avatar-image]': `hasSrc `,\n    '[style.width]': 'customSize',\n    '[style.height]': 'customSize',\n    '[style.line-height]': 'customSize',\n    // nzSize type is number when customSize is true\n    '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzAvatarComponent implements OnChanges {\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzShape: NzShapeSCType = 'circle';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzSizeLDSType | number = 'default';\n  @Input() nzText?: string;\n  @Input() nzSrc?: string;\n  @Input() nzSrcSet?: string;\n  @Input() nzAlt?: string;\n  @Input() nzIcon?: string;\n  @Output() readonly nzError = new EventEmitter<Event>();\n\n  hasText: boolean = false;\n  hasSrc: boolean = true;\n  hasIcon: boolean = false;\n  textStyles: NgStyleInterface = {};\n  classMap: NgClassInterface = {};\n  customSize: string | null = null;\n\n  @ViewChild('textEl', { static: false }) textEl?: ElementRef;\n\n  private el: HTMLElement = this.elementRef.nativeElement;\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private platform: Platform\n  ) {}\n\n  imgError($event: Event): void {\n    this.nzError.emit($event);\n    if (!$event.defaultPrevented) {\n      this.hasSrc = false;\n      this.hasIcon = false;\n      this.hasText = false;\n      if (this.nzIcon) {\n        this.hasIcon = true;\n      } else if (this.nzText) {\n        this.hasText = true;\n      }\n      this.cdr.detectChanges();\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n  }\n\n  ngOnChanges(): void {\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n\n    this.setSizeStyle();\n    this.notifyCalc();\n  }\n\n  private calcStringSize(): void {\n    if (!this.hasText) {\n      return;\n    }\n\n    const childrenWidth = this.textEl!.nativeElement.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n    this.textStyles = {\n      transform: `scale(${scale}) translateX(-50%)`\n    };\n    if (this.customSize) {\n      Object.assign(this.textStyles, {\n        lineHeight: this.customSize\n      });\n    }\n    this.cdr.detectChanges();\n  }\n\n  private notifyCalc(): void {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      setTimeout(() => {\n        this.calcStringSize();\n      });\n    }\n  }\n\n  private setSizeStyle(): void {\n    if (typeof this.nzSize === 'number') {\n      this.customSize = `${this.nzSize}px`;\n    } else {\n      this.customSize = null;\n    }\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzAvatarComponent } from './avatar.component';\n\n@NgModule({\n  declarations: [NzAvatarComponent],\n  exports: [NzAvatarComponent],\n  imports: [CommonModule, NzIconModule, PlatformModule]\n})\nexport class NzAvatarModule {}\n"]}