/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ComponentType, Overlay } from '@angular/cdk/overlay';
import { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';
import { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';
import { NzSingletonService } from 'ng-zorro-antd/core/services';
import { Subject } from 'rxjs';
import { NzMessageData, NzMessageDataOptions } from './typings';
import * as ɵngcc0 from '@angular/core';
export declare abstract class NzMNService {
    protected nzSingletonService: NzSingletonService;
    protected overlay: Overlay;
    private injector;
    protected abstract componentPrefix: string;
    protected container?: NzMNContainerComponent;
    constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector);
    remove(id?: string): void;
    protected getInstanceId(): string;
    protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T;
}
export declare abstract class NzMNContainerComponent implements OnInit, OnDestroy {
    protected cdr: ChangeDetectorRef;
    protected nzConfigService: NzConfigService;
    config?: Required<MessageConfig>;
    instances: Array<Required<NzMessageData>>;
    protected readonly destroy$: Subject<void>;
    constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    create(data: NzMessageData): Required<NzMessageData>;
    remove(id: string, userAction?: boolean): void;
    removeAll(): void;
    protected onCreate(instance: NzMessageData): Required<NzMessageData>;
    protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void;
    protected readyInstances(): void;
    protected abstract updateConfig(): void;
    protected abstract subscribeConfigChange(): void;
    protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzMNContainerComponent>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzMNContainerComponent, never, never, {}, {}, never>;
}
export declare abstract class NzMNComponent implements OnInit, OnDestroy {
    protected cdr: ChangeDetectorRef;
    instance: Required<NzMessageData>;
    index?: number;
    readonly destroyed: EventEmitter<{
        id: string;
        userAction: boolean;
    }>;
    protected options: Required<NzMessageDataOptions>;
    protected autoClose?: boolean;
    protected eraseTimer: number | null;
    protected eraseTimingStart?: number;
    protected eraseTTL: number;
    constructor(cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onEnter(): void;
    onLeave(): void;
    protected destroy(userAction?: boolean): void;
    private initErase;
    private updateTTL;
    private startEraseTimeout;
    private clearEraseTimeout;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzMNComponent>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzMNComponent, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5kLnRzIiwic291cmNlcyI6WyJiYXNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudFR5cGUsIE92ZXJsYXkgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBJbmplY3RvciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lc3NhZ2VDb25maWcsIE56Q29uZmlnU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS9jb25maWcnO1xuaW1wb3J0IHsgTnpTaW5nbGV0b25TZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3NlcnZpY2VzJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE56TWVzc2FnZURhdGEsIE56TWVzc2FnZURhdGFPcHRpb25zIH0gZnJvbSAnLi90eXBpbmdzJztcbmV4cG9ydCBkZWNsYXJlIGFic3RyYWN0IGNsYXNzIE56TU5TZXJ2aWNlIHtcbiAgICBwcm90ZWN0ZWQgbnpTaW5nbGV0b25TZXJ2aWNlOiBOelNpbmdsZXRvblNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIG92ZXJsYXk6IE92ZXJsYXk7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgY29tcG9uZW50UHJlZml4OiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIGNvbnRhaW5lcj86IE56TU5Db250YWluZXJDb21wb25lbnQ7XG4gICAgY29uc3RydWN0b3IobnpTaW5nbGV0b25TZXJ2aWNlOiBOelNpbmdsZXRvblNlcnZpY2UsIG92ZXJsYXk6IE92ZXJsYXksIGluamVjdG9yOiBJbmplY3Rvcik7XG4gICAgcmVtb3ZlKGlkPzogc3RyaW5nKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZ2V0SW5zdGFuY2VJZCgpOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIHdpdGhDb250YWluZXI8VCBleHRlbmRzIE56TU5Db250YWluZXJDb21wb25lbnQ+KGN0b3I6IENvbXBvbmVudFR5cGU8VD4pOiBUO1xufVxuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgTnpNTkNvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcm90ZWN0ZWQgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcm90ZWN0ZWQgbnpDb25maWdTZXJ2aWNlOiBOekNvbmZpZ1NlcnZpY2U7XG4gICAgY29uZmlnPzogUmVxdWlyZWQ8TWVzc2FnZUNvbmZpZz47XG4gICAgaW5zdGFuY2VzOiBBcnJheTxSZXF1aXJlZDxOek1lc3NhZ2VEYXRhPj47XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlc3Ryb3kkOiBTdWJqZWN0PHZvaWQ+O1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY3JlYXRlKGRhdGE6IE56TWVzc2FnZURhdGEpOiBSZXF1aXJlZDxOek1lc3NhZ2VEYXRhPjtcbiAgICByZW1vdmUoaWQ6IHN0cmluZywgdXNlckFjdGlvbj86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHJlbW92ZUFsbCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvbkNyZWF0ZShpbnN0YW5jZTogTnpNZXNzYWdlRGF0YSk6IFJlcXVpcmVkPE56TWVzc2FnZURhdGE+O1xuICAgIHByb3RlY3RlZCBvblJlbW92ZShpbnN0YW5jZTogUmVxdWlyZWQ8TnpNZXNzYWdlRGF0YT4sIHVzZXJBY3Rpb246IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByb3RlY3RlZCByZWFkeUluc3RhbmNlcygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBhYnN0cmFjdCB1cGRhdGVDb25maWcoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3Qgc3Vic2NyaWJlQ29uZmlnQ2hhbmdlKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIG1lcmdlT3B0aW9ucyhvcHRpb25zPzogTnpNZXNzYWdlRGF0YU9wdGlvbnMpOiBOek1lc3NhZ2VEYXRhT3B0aW9ucztcbn1cbmV4cG9ydCBkZWNsYXJlIGFic3RyYWN0IGNsYXNzIE56TU5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgaW5zdGFuY2U6IFJlcXVpcmVkPE56TWVzc2FnZURhdGE+O1xuICAgIGluZGV4PzogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGRlc3Ryb3llZDogRXZlbnRFbWl0dGVyPHtcbiAgICAgICAgaWQ6IHN0cmluZztcbiAgICAgICAgdXNlckFjdGlvbjogYm9vbGVhbjtcbiAgICB9PjtcbiAgICBwcm90ZWN0ZWQgb3B0aW9uczogUmVxdWlyZWQ8TnpNZXNzYWdlRGF0YU9wdGlvbnM+O1xuICAgIHByb3RlY3RlZCBhdXRvQ2xvc2U/OiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBlcmFzZVRpbWVyOiBudW1iZXIgfCBudWxsO1xuICAgIHByb3RlY3RlZCBlcmFzZVRpbWluZ1N0YXJ0PzogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBlcmFzZVRUTDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvbkVudGVyKCk6IHZvaWQ7XG4gICAgb25MZWF2ZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBkZXN0cm95KHVzZXJBY3Rpb24/OiBib29sZWFuKTogdm9pZDtcbiAgICBwcml2YXRlIGluaXRFcmFzZTtcbiAgICBwcml2YXRlIHVwZGF0ZVRUTDtcbiAgICBwcml2YXRlIHN0YXJ0RXJhc2VUaW1lb3V0O1xuICAgIHByaXZhdGUgY2xlYXJFcmFzZVRpbWVvdXQ7XG59XG4iXX0=