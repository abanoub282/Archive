/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import * as ɵngcc0 from '@angular/core';
export declare class NzOptionItemComponent implements OnChanges {
    selected: boolean;
    activated: boolean;
    grouped: boolean;
    customContent: boolean;
    template: TemplateRef<NzSafeAny> | null;
    disabled: boolean;
    showState: boolean;
    label: string | null;
    value: NzSafeAny | null;
    activatedValue: NzSafeAny | null;
    listOfSelectedValue: NzSafeAny[];
    icon: TemplateRef<NzSafeAny> | null;
    compareWith: (o1: NzSafeAny, o2: NzSafeAny) => boolean;
    readonly itemClick: EventEmitter<any>;
    readonly itemHover: EventEmitter<any>;
    onHostMouseEnter(): void;
    onHostClick(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzOptionItemComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzOptionItemComponent, "nz-option-item", never, {
    "grouped": "grouped";
    "customContent": "customContent";
    "template": "template";
    "disabled": "disabled";
    "showState": "showState";
    "label": "label";
    "value": "value";
    "activatedValue": "activatedValue";
    "listOfSelectedValue": "listOfSelectedValue";
    "icon": "icon";
    "compareWith": "compareWith";
}, {
    "itemClick": "itemClick";
    "itemHover": "itemHover";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm9wdGlvbi1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOek9wdGlvbkl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHNlbGVjdGVkOiBib29sZWFuO1xuICAgIGFjdGl2YXRlZDogYm9vbGVhbjtcbiAgICBncm91cGVkOiBib29sZWFuO1xuICAgIGN1c3RvbUNvbnRlbnQ6IGJvb2xlYW47XG4gICAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCBudWxsO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHNob3dTdGF0ZTogYm9vbGVhbjtcbiAgICBsYWJlbDogc3RyaW5nIHwgbnVsbDtcbiAgICB2YWx1ZTogTnpTYWZlQW55IHwgbnVsbDtcbiAgICBhY3RpdmF0ZWRWYWx1ZTogTnpTYWZlQW55IHwgbnVsbDtcbiAgICBsaXN0T2ZTZWxlY3RlZFZhbHVlOiBOelNhZmVBbnlbXTtcbiAgICBpY29uOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+IHwgbnVsbDtcbiAgICBjb21wYXJlV2l0aDogKG8xOiBOelNhZmVBbnksIG8yOiBOelNhZmVBbnkpID0+IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXRlbUNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICByZWFkb25seSBpdGVtSG92ZXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uSG9zdE1vdXNlRW50ZXIoKTogdm9pZDtcbiAgICBvbkhvc3RDbGljaygpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19