/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Portal } from '@angular/cdk/portal';
import { ChangeDetectorRef, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewContainerRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzEmptyCustomContent, NzEmptySize } from './config';
import * as ɵngcc0 from '@angular/core';
declare type NzEmptyContentType = 'component' | 'template' | 'string';
export declare class NzEmbedEmptyComponent implements OnChanges, OnInit, OnDestroy {
    private configService;
    private viewContainerRef;
    private cdr;
    private injector;
    nzComponentName?: string;
    specificContent?: NzEmptyCustomContent;
    content?: NzEmptyCustomContent;
    contentType: NzEmptyContentType;
    contentPortal?: Portal<NzSafeAny>;
    size: NzEmptySize;
    private destroy$;
    constructor(configService: NzConfigService, viewContainerRef: ViewContainerRef, cdr: ChangeDetectorRef, injector: Injector);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private renderEmpty;
    private subscribeDefaultEmptyContentChange;
    private getUserDefaultEmptyContent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzEmbedEmptyComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzEmbedEmptyComponent, "nz-embed-empty", ["nzEmbedEmpty"], {
    "nzComponentName": "nzComponentName";
    "specificContent": "specificContent";
}, {}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1iZWQtZW1wdHkuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImVtYmVkLWVtcHR5LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgUG9ydGFsIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgSW5qZWN0b3IsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBOekNvbmZpZ1NlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IE56RW1wdHlDdXN0b21Db250ZW50LCBOekVtcHR5U2l6ZSB9IGZyb20gJy4vY29uZmlnJztcbmRlY2xhcmUgdHlwZSBOekVtcHR5Q29udGVudFR5cGUgPSAnY29tcG9uZW50JyB8ICd0ZW1wbGF0ZScgfCAnc3RyaW5nJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56RW1iZWRFbXB0eUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY29uZmlnU2VydmljZTtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBuekNvbXBvbmVudE5hbWU/OiBzdHJpbmc7XG4gICAgc3BlY2lmaWNDb250ZW50PzogTnpFbXB0eUN1c3RvbUNvbnRlbnQ7XG4gICAgY29udGVudD86IE56RW1wdHlDdXN0b21Db250ZW50O1xuICAgIGNvbnRlbnRUeXBlOiBOekVtcHR5Q29udGVudFR5cGU7XG4gICAgY29udGVudFBvcnRhbD86IFBvcnRhbDxOelNhZmVBbnk+O1xuICAgIHNpemU6IE56RW1wdHlTaXplO1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgY29uc3RydWN0b3IoY29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlLCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBpbmplY3RvcjogSW5qZWN0b3IpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIHJlbmRlckVtcHR5O1xuICAgIHByaXZhdGUgc3Vic2NyaWJlRGVmYXVsdEVtcHR5Q29udGVudENoYW5nZTtcbiAgICBwcml2YXRlIGdldFVzZXJEZWZhdWx0RW1wdHlDb250ZW50O1xufVxuZXhwb3J0IHt9O1xuIl19