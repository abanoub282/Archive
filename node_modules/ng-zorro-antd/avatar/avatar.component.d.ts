/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges } from '@angular/core';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NgClassInterface, NgStyleInterface, NzShapeSCType, NzSizeLDSType } from 'ng-zorro-antd/core/types';
import * as ɵngcc0 from '@angular/core';
export declare class NzAvatarComponent implements OnChanges {
    nzConfigService: NzConfigService;
    private elementRef;
    private cdr;
    private platform;
    nzShape: NzShapeSCType;
    nzSize: NzSizeLDSType | number;
    nzText?: string;
    nzSrc?: string;
    nzSrcSet?: string;
    nzAlt?: string;
    nzIcon?: string;
    readonly nzError: EventEmitter<Event>;
    hasText: boolean;
    hasSrc: boolean;
    hasIcon: boolean;
    textStyles: NgStyleInterface;
    classMap: NgClassInterface;
    customSize: string | null;
    textEl?: ElementRef;
    private el;
    constructor(nzConfigService: NzConfigService, elementRef: ElementRef, cdr: ChangeDetectorRef, platform: Platform);
    imgError($event: Event): void;
    ngOnChanges(): void;
    private calcStringSize;
    private notifyCalc;
    private setSizeStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzAvatarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzAvatarComponent, "nz-avatar", ["nzAvatar"], {
    "nzShape": "nzShape";
    "nzSize": "nzSize";
    "nzText": "nzText";
    "nzSrc": "nzSrc";
    "nzSrcSet": "nzSrcSet";
    "nzAlt": "nzAlt";
    "nzIcon": "nzIcon";
}, {
    "nzError": "nzError";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhdmF0YXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOekNvbmZpZ1NlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IE5nQ2xhc3NJbnRlcmZhY2UsIE5nU3R5bGVJbnRlcmZhY2UsIE56U2hhcGVTQ1R5cGUsIE56U2l6ZUxEU1R5cGUgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpBdmF0YXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlO1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBwcml2YXRlIHBsYXRmb3JtO1xuICAgIG56U2hhcGU6IE56U2hhcGVTQ1R5cGU7XG4gICAgbnpTaXplOiBOelNpemVMRFNUeXBlIHwgbnVtYmVyO1xuICAgIG56VGV4dD86IHN0cmluZztcbiAgICBuelNyYz86IHN0cmluZztcbiAgICBuelNyY1NldD86IHN0cmluZztcbiAgICBuekFsdD86IHN0cmluZztcbiAgICBuekljb24/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgbnpFcnJvcjogRXZlbnRFbWl0dGVyPEV2ZW50PjtcbiAgICBoYXNUZXh0OiBib29sZWFuO1xuICAgIGhhc1NyYzogYm9vbGVhbjtcbiAgICBoYXNJY29uOiBib29sZWFuO1xuICAgIHRleHRTdHlsZXM6IE5nU3R5bGVJbnRlcmZhY2U7XG4gICAgY2xhc3NNYXA6IE5nQ2xhc3NJbnRlcmZhY2U7XG4gICAgY3VzdG9tU2l6ZTogc3RyaW5nIHwgbnVsbDtcbiAgICB0ZXh0RWw/OiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgZWw7XG4gICAgY29uc3RydWN0b3IobnpDb25maWdTZXJ2aWNlOiBOekNvbmZpZ1NlcnZpY2UsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHBsYXRmb3JtOiBQbGF0Zm9ybSk7XG4gICAgaW1nRXJyb3IoJGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICBwcml2YXRlIGNhbGNTdHJpbmdTaXplO1xuICAgIHByaXZhdGUgbm90aWZ5Q2FsYztcbiAgICBwcml2YXRlIHNldFNpemVTdHlsZTtcbn1cbiJdfQ==