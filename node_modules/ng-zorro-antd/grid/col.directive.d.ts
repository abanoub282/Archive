/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterViewInit, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { NzRowDirective } from './row.directive';
import * as ɵngcc0 from '@angular/core';
export interface EmbeddedProperty {
    span?: number;
    pull?: number;
    push?: number;
    offset?: number;
    order?: number;
}
export declare class NzColDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    private elementRef;
    nzRowDirective: NzRowDirective;
    renderer: Renderer2;
    private classMap;
    private destroy$;
    hostFlexStyle: string | null;
    nzFlex: string | number | null;
    nzSpan: string | number | null;
    nzOrder: string | number | null;
    nzOffset: string | number | null;
    nzPush: string | number | null;
    nzPull: string | number | null;
    nzXs: string | number | EmbeddedProperty | null;
    nzSm: string | number | EmbeddedProperty | null;
    nzMd: string | number | EmbeddedProperty | null;
    nzLg: string | number | EmbeddedProperty | null;
    nzXl: string | number | EmbeddedProperty | null;
    nzXXl: string | number | EmbeddedProperty | null;
    setHostClassMap(): void;
    setHostFlexStyle(): void;
    parseFlex(flex: number | string | null): string | null;
    generateClass(): object;
    constructor(elementRef: ElementRef, nzRowDirective: NzRowDirective, renderer: Renderer2);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzColDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzColDirective, "[nz-col],nz-col,nz-form-control,nz-form-label", ["nzCol"], {
    "nzFlex": "nzFlex";
    "nzSpan": "nzSpan";
    "nzOrder": "nzOrder";
    "nzOffset": "nzOffset";
    "nzPush": "nzPush";
    "nzPull": "nzPull";
    "nzXs": "nzXs";
    "nzSm": "nzSm";
    "nzMd": "nzMd";
    "nzLg": "nzLg";
    "nzXl": "nzXl";
    "nzXXl": "nzXXl";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJjb2wuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOelJvd0RpcmVjdGl2ZSB9IGZyb20gJy4vcm93LmRpcmVjdGl2ZSc7XG5leHBvcnQgaW50ZXJmYWNlIEVtYmVkZGVkUHJvcGVydHkge1xuICAgIHNwYW4/OiBudW1iZXI7XG4gICAgcHVsbD86IG51bWJlcjtcbiAgICBwdXNoPzogbnVtYmVyO1xuICAgIG9mZnNldD86IG51bWJlcjtcbiAgICBvcmRlcj86IG51bWJlcjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56Q29sRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIG56Um93RGlyZWN0aXZlOiBOelJvd0RpcmVjdGl2ZTtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgY2xhc3NNYXA7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBob3N0RmxleFN0eWxlOiBzdHJpbmcgfCBudWxsO1xuICAgIG56RmxleDogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBuelNwYW46IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbnpPcmRlcjogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBuek9mZnNldDogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBuelB1c2g6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbnpQdWxsOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIG56WHM6IHN0cmluZyB8IG51bWJlciB8IEVtYmVkZGVkUHJvcGVydHkgfCBudWxsO1xuICAgIG56U206IHN0cmluZyB8IG51bWJlciB8IEVtYmVkZGVkUHJvcGVydHkgfCBudWxsO1xuICAgIG56TWQ6IHN0cmluZyB8IG51bWJlciB8IEVtYmVkZGVkUHJvcGVydHkgfCBudWxsO1xuICAgIG56TGc6IHN0cmluZyB8IG51bWJlciB8IEVtYmVkZGVkUHJvcGVydHkgfCBudWxsO1xuICAgIG56WGw6IHN0cmluZyB8IG51bWJlciB8IEVtYmVkZGVkUHJvcGVydHkgfCBudWxsO1xuICAgIG56WFhsOiBzdHJpbmcgfCBudW1iZXIgfCBFbWJlZGRlZFByb3BlcnR5IHwgbnVsbDtcbiAgICBzZXRIb3N0Q2xhc3NNYXAoKTogdm9pZDtcbiAgICBzZXRIb3N0RmxleFN0eWxlKCk6IHZvaWQ7XG4gICAgcGFyc2VGbGV4KGZsZXg6IG51bWJlciB8IHN0cmluZyB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuICAgIGdlbmVyYXRlQ2xhc3MoKTogb2JqZWN0O1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIG56Um93RGlyZWN0aXZlOiBOelJvd0RpcmVjdGl2ZSwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19