/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { Observable, Subscription } from 'rxjs';
import { NzI18nService, NzUploadI18nInterface } from 'ng-zorro-antd/i18n';
import { NzShowUploadList, NzUploadChangeParam, NzUploadFile, NzUploadListType, NzUploadTransformFileType, NzUploadType, NzUploadXHRArgs, UploadFilter, ZipButtonOptions } from './interface';
import { NzUploadBtnComponent } from './upload-btn.component';
import { NzUploadListComponent } from './upload-list.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzUploadComponent implements OnInit, OnChanges, OnDestroy {
    private cdr;
    private i18n;
    static ngAcceptInputType_nzLimit: NumberInput;
    static ngAcceptInputType_nzSize: NumberInput;
    static ngAcceptInputType_nzDirectory: BooleanInput;
    static ngAcceptInputType_nzOpenFileDialogOnClick: BooleanInput;
    static ngAcceptInputType_nzDisabled: BooleanInput;
    static ngAcceptInputType_nzMultiple: BooleanInput;
    static ngAcceptInputType_nzShowUploadList: BooleanInput | NzShowUploadList | undefined | null;
    static ngAcceptInputType_nzShowButton: BooleanInput;
    static ngAcceptInputType_nzWithCredentials: BooleanInput;
    private i18n$;
    uploadComp: NzUploadBtnComponent;
    listComp: NzUploadListComponent;
    locale: NzUploadI18nInterface;
    nzType: NzUploadType;
    nzLimit: number;
    nzSize: number;
    nzFileType?: string;
    nzAccept?: string | string[];
    nzAction?: string | ((file: NzUploadFile) => string | Observable<string>);
    nzDirectory: boolean;
    nzOpenFileDialogOnClick: boolean;
    nzBeforeUpload?: (file: NzUploadFile, fileList: NzUploadFile[]) => boolean | Observable<boolean>;
    nzCustomRequest?: (item: NzUploadXHRArgs) => Subscription;
    nzData?: {} | ((file: NzUploadFile) => {} | Observable<{}>);
    nzFilter: UploadFilter[];
    nzFileList: NzUploadFile[];
    nzDisabled: boolean;
    nzHeaders?: {} | ((file: NzUploadFile) => {} | Observable<{}>);
    nzListType: NzUploadListType;
    nzMultiple: boolean;
    nzName: string;
    private _showUploadList;
    set nzShowUploadList(value: boolean | NzShowUploadList);
    get nzShowUploadList(): boolean | NzShowUploadList;
    nzShowButton: boolean;
    nzWithCredentials: boolean;
    nzRemove?: (file: NzUploadFile) => boolean | Observable<boolean>;
    nzPreview?: (file: NzUploadFile) => void;
    nzPreviewFile?: (file: NzUploadFile) => Observable<string>;
    nzPreviewIsImage?: (file: NzUploadFile) => boolean;
    nzTransformFile?: (file: NzUploadFile) => NzUploadTransformFileType;
    nzDownload?: (file: NzUploadFile) => void;
    nzIconRender: TemplateRef<NzSafeAny> | null;
    nzFileListRender: TemplateRef<void> | null;
    readonly nzChange: EventEmitter<NzUploadChangeParam>;
    readonly nzFileListChange: EventEmitter<NzUploadFile[]>;
    _btnOptions?: ZipButtonOptions;
    private zipOptions;
    constructor(cdr: ChangeDetectorRef, i18n: NzI18nService);
    private fileToObject;
    private getFileItem;
    private removeFileItem;
    private onStart;
    private onProgress;
    private onSuccess;
    private onError;
    private dragState?;
    fileDrop(e: DragEvent): void;
    private detectChangesList;
    onRemove: (file: NzUploadFile) => void;
    private prefixCls;
    classList: string[];
    private setClassMap;
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzUploadComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzUploadComponent, "nz-upload", ["nzUpload"], {
    "nzType": "nzType";
    "nzLimit": "nzLimit";
    "nzSize": "nzSize";
    "nzDirectory": "nzDirectory";
    "nzOpenFileDialogOnClick": "nzOpenFileDialogOnClick";
    "nzFilter": "nzFilter";
    "nzFileList": "nzFileList";
    "nzDisabled": "nzDisabled";
    "nzListType": "nzListType";
    "nzMultiple": "nzMultiple";
    "nzName": "nzName";
    "nzShowButton": "nzShowButton";
    "nzWithCredentials": "nzWithCredentials";
    "nzIconRender": "nzIconRender";
    "nzFileListRender": "nzFileListRender";
    "nzShowUploadList": "nzShowUploadList";
    "nzFileType": "nzFileType";
    "nzAccept": "nzAccept";
    "nzAction": "nzAction";
    "nzBeforeUpload": "nzBeforeUpload";
    "nzCustomRequest": "nzCustomRequest";
    "nzData": "nzData";
    "nzHeaders": "nzHeaders";
    "nzRemove": "nzRemove";
    "nzPreview": "nzPreview";
    "nzPreviewFile": "nzPreviewFile";
    "nzPreviewIsImage": "nzPreviewIsImage";
    "nzTransformFile": "nzTransformFile";
    "nzDownload": "nzDownload";
}, {
    "nzChange": "nzChange";
    "nzFileListChange": "nzFileListChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ1cGxvYWQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFFQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOdW1iZXJJbnB1dCwgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTnpJMThuU2VydmljZSwgTnpVcGxvYWRJMThuSW50ZXJmYWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IE56U2hvd1VwbG9hZExpc3QsIE56VXBsb2FkQ2hhbmdlUGFyYW0sIE56VXBsb2FkRmlsZSwgTnpVcGxvYWRMaXN0VHlwZSwgTnpVcGxvYWRUcmFuc2Zvcm1GaWxlVHlwZSwgTnpVcGxvYWRUeXBlLCBOelVwbG9hZFhIUkFyZ3MsIFVwbG9hZEZpbHRlciwgWmlwQnV0dG9uT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlJztcbmltcG9ydCB7IE56VXBsb2FkQnRuQ29tcG9uZW50IH0gZnJvbSAnLi91cGxvYWQtYnRuLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOelVwbG9hZExpc3RDb21wb25lbnQgfSBmcm9tICcuL3VwbG9hZC1saXN0LmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelVwbG9hZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgaTE4bjtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpMaW1pdDogTnVtYmVySW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256U2l6ZTogTnVtYmVySW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256RGlyZWN0b3J5OiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256T3BlbkZpbGVEaWFsb2dPbkNsaWNrOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256RGlzYWJsZWQ6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpNdWx0aXBsZTogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelNob3dVcGxvYWRMaXN0OiBCb29sZWFuSW5wdXQgfCBOelNob3dVcGxvYWRMaXN0IHwgdW5kZWZpbmVkIHwgbnVsbDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaG93QnV0dG9uOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256V2l0aENyZWRlbnRpYWxzOiBCb29sZWFuSW5wdXQ7XG4gICAgcHJpdmF0ZSBpMThuJDtcbiAgICB1cGxvYWRDb21wOiBOelVwbG9hZEJ0bkNvbXBvbmVudDtcbiAgICBsaXN0Q29tcDogTnpVcGxvYWRMaXN0Q29tcG9uZW50O1xuICAgIGxvY2FsZTogTnpVcGxvYWRJMThuSW50ZXJmYWNlO1xuICAgIG56VHlwZTogTnpVcGxvYWRUeXBlO1xuICAgIG56TGltaXQ6IG51bWJlcjtcbiAgICBuelNpemU6IG51bWJlcjtcbiAgICBuekZpbGVUeXBlPzogc3RyaW5nO1xuICAgIG56QWNjZXB0Pzogc3RyaW5nIHwgc3RyaW5nW107XG4gICAgbnpBY3Rpb24/OiBzdHJpbmcgfCAoKGZpbGU6IE56VXBsb2FkRmlsZSkgPT4gc3RyaW5nIHwgT2JzZXJ2YWJsZTxzdHJpbmc+KTtcbiAgICBuekRpcmVjdG9yeTogYm9vbGVhbjtcbiAgICBuek9wZW5GaWxlRGlhbG9nT25DbGljazogYm9vbGVhbjtcbiAgICBuekJlZm9yZVVwbG9hZD86IChmaWxlOiBOelVwbG9hZEZpbGUsIGZpbGVMaXN0OiBOelVwbG9hZEZpbGVbXSkgPT4gYm9vbGVhbiB8IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgbnpDdXN0b21SZXF1ZXN0PzogKGl0ZW06IE56VXBsb2FkWEhSQXJncykgPT4gU3Vic2NyaXB0aW9uO1xuICAgIG56RGF0YT86IHt9IHwgKChmaWxlOiBOelVwbG9hZEZpbGUpID0+IHt9IHwgT2JzZXJ2YWJsZTx7fT4pO1xuICAgIG56RmlsdGVyOiBVcGxvYWRGaWx0ZXJbXTtcbiAgICBuekZpbGVMaXN0OiBOelVwbG9hZEZpbGVbXTtcbiAgICBuekRpc2FibGVkOiBib29sZWFuO1xuICAgIG56SGVhZGVycz86IHt9IHwgKChmaWxlOiBOelVwbG9hZEZpbGUpID0+IHt9IHwgT2JzZXJ2YWJsZTx7fT4pO1xuICAgIG56TGlzdFR5cGU6IE56VXBsb2FkTGlzdFR5cGU7XG4gICAgbnpNdWx0aXBsZTogYm9vbGVhbjtcbiAgICBuek5hbWU6IHN0cmluZztcbiAgICBwcml2YXRlIF9zaG93VXBsb2FkTGlzdDtcbiAgICBzZXQgbnpTaG93VXBsb2FkTGlzdCh2YWx1ZTogYm9vbGVhbiB8IE56U2hvd1VwbG9hZExpc3QpO1xuICAgIGdldCBuelNob3dVcGxvYWRMaXN0KCk6IGJvb2xlYW4gfCBOelNob3dVcGxvYWRMaXN0O1xuICAgIG56U2hvd0J1dHRvbjogYm9vbGVhbjtcbiAgICBueldpdGhDcmVkZW50aWFsczogYm9vbGVhbjtcbiAgICBuelJlbW92ZT86IChmaWxlOiBOelVwbG9hZEZpbGUpID0+IGJvb2xlYW4gfCBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICAgIG56UHJldmlldz86IChmaWxlOiBOelVwbG9hZEZpbGUpID0+IHZvaWQ7XG4gICAgbnpQcmV2aWV3RmlsZT86IChmaWxlOiBOelVwbG9hZEZpbGUpID0+IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICBuelByZXZpZXdJc0ltYWdlPzogKGZpbGU6IE56VXBsb2FkRmlsZSkgPT4gYm9vbGVhbjtcbiAgICBuelRyYW5zZm9ybUZpbGU/OiAoZmlsZTogTnpVcGxvYWRGaWxlKSA9PiBOelVwbG9hZFRyYW5zZm9ybUZpbGVUeXBlO1xuICAgIG56RG93bmxvYWQ/OiAoZmlsZTogTnpVcGxvYWRGaWxlKSA9PiB2b2lkO1xuICAgIG56SWNvblJlbmRlcjogVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IG51bGw7XG4gICAgbnpGaWxlTGlzdFJlbmRlcjogVGVtcGxhdGVSZWY8dm9pZD4gfCBudWxsO1xuICAgIHJlYWRvbmx5IG56Q2hhbmdlOiBFdmVudEVtaXR0ZXI8TnpVcGxvYWRDaGFuZ2VQYXJhbT47XG4gICAgcmVhZG9ubHkgbnpGaWxlTGlzdENoYW5nZTogRXZlbnRFbWl0dGVyPE56VXBsb2FkRmlsZVtdPjtcbiAgICBfYnRuT3B0aW9ucz86IFppcEJ1dHRvbk9wdGlvbnM7XG4gICAgcHJpdmF0ZSB6aXBPcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGkxOG46IE56STE4blNlcnZpY2UpO1xuICAgIHByaXZhdGUgZmlsZVRvT2JqZWN0O1xuICAgIHByaXZhdGUgZ2V0RmlsZUl0ZW07XG4gICAgcHJpdmF0ZSByZW1vdmVGaWxlSXRlbTtcbiAgICBwcml2YXRlIG9uU3RhcnQ7XG4gICAgcHJpdmF0ZSBvblByb2dyZXNzO1xuICAgIHByaXZhdGUgb25TdWNjZXNzO1xuICAgIHByaXZhdGUgb25FcnJvcjtcbiAgICBwcml2YXRlIGRyYWdTdGF0ZT87XG4gICAgZmlsZURyb3AoZTogRHJhZ0V2ZW50KTogdm9pZDtcbiAgICBwcml2YXRlIGRldGVjdENoYW5nZXNMaXN0O1xuICAgIG9uUmVtb3ZlOiAoZmlsZTogTnpVcGxvYWRGaWxlKSA9PiB2b2lkO1xuICAgIHByaXZhdGUgcHJlZml4Q2xzO1xuICAgIGNsYXNzTGlzdDogc3RyaW5nW107XG4gICAgcHJpdmF0ZSBzZXRDbGFzc01hcDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==