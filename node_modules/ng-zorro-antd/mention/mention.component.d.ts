/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Overlay } from '@angular/cdk/overlay';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzMentionTriggerDirective } from './mention-trigger';
import { NzMentionService } from './mention.service';
import * as ɵngcc0 from '@angular/core';
export interface MentionOnSearchTypes {
    value: string;
    prefix: string;
}
export interface Mention {
    startPos: number;
    endPos: number;
    mention: string;
}
export declare type MentionPlacement = 'top' | 'bottom';
export declare class NzMentionComponent implements OnDestroy, OnInit, OnChanges {
    private ngDocument;
    private cdr;
    private overlay;
    private viewContainerRef;
    private nzMentionService;
    static ngAcceptInputType_nzLoading: BooleanInput;
    nzValueWith: (value: NzSafeAny) => string;
    nzPrefix: string | string[];
    nzLoading: boolean;
    nzNotFoundContent: string;
    nzPlacement: MentionPlacement;
    nzSuggestions: NzSafeAny[];
    readonly nzOnSelect: EventEmitter<NzSafeAny>;
    readonly nzOnSearchChange: EventEmitter<MentionOnSearchTypes>;
    trigger: NzMentionTriggerDirective;
    suggestionsTemp?: TemplateRef<void>;
    set suggestionChild(value: TemplateRef<{
        $implicit: NzSafeAny;
    }>);
    isOpen: boolean;
    filteredSuggestions: string[];
    suggestionTemplate: TemplateRef<{
        $implicit: NzSafeAny;
    }> | null;
    activeIndex: number;
    private previousValue;
    private cursorMention;
    private cursorMentionStart?;
    private cursorMentionEnd?;
    private overlayRef;
    private portal?;
    private positionStrategy;
    private overlayBackdropClickSubscription;
    private get triggerNativeElement();
    constructor(ngDocument: NzSafeAny, cdr: ChangeDetectorRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzMentionService: NzMentionService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    closeDropdown(): void;
    openDropdown(): void;
    getMentions(): string[];
    selectSuggestion(suggestion: string | {}): void;
    private handleInput;
    private handleKeydown;
    private handleClick;
    private bindTriggerEvents;
    private suggestionsFilter;
    private resetDropdown;
    private setNextItemActive;
    private setPreviousItemActive;
    private canOpen;
    private resetCursorMention;
    private updatePositions;
    private subscribeOverlayBackdropClick;
    private attachOverlay;
    private getOverlayConfig;
    private getOverlayPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzMentionComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzMentionComponent, "nz-mention", ["nzMention"], {
    "nzValueWith": "nzValueWith";
    "nzPrefix": "nzPrefix";
    "nzLoading": "nzLoading";
    "nzNotFoundContent": "nzNotFoundContent";
    "nzPlacement": "nzPlacement";
    "nzSuggestions": "nzSuggestions";
}, {
    "nzOnSelect": "nzOnSelect";
    "nzOnSearchChange": "nzOnSearchChange";
}, ["suggestionChild"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibWVudGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9FQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBPdmVybGF5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJvb2xlYW5JbnB1dCwgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56TWVudGlvblRyaWdnZXJEaXJlY3RpdmUgfSBmcm9tICcuL21lbnRpb24tdHJpZ2dlcic7XG5pbXBvcnQgeyBOek1lbnRpb25TZXJ2aWNlIH0gZnJvbSAnLi9tZW50aW9uLnNlcnZpY2UnO1xuZXhwb3J0IGludGVyZmFjZSBNZW50aW9uT25TZWFyY2hUeXBlcyB7XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICBwcmVmaXg6IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgTWVudGlvbiB7XG4gICAgc3RhcnRQb3M6IG51bWJlcjtcbiAgICBlbmRQb3M6IG51bWJlcjtcbiAgICBtZW50aW9uOiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSB0eXBlIE1lbnRpb25QbGFjZW1lbnQgPSAndG9wJyB8ICdib3R0b20nO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpNZW50aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBuZ0RvY3VtZW50O1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgb3ZlcmxheTtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgcHJpdmF0ZSBuek1lbnRpb25TZXJ2aWNlO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekxvYWRpbmc6IEJvb2xlYW5JbnB1dDtcbiAgICBuelZhbHVlV2l0aDogKHZhbHVlOiBOelNhZmVBbnkpID0+IHN0cmluZztcbiAgICBuelByZWZpeDogc3RyaW5nIHwgc3RyaW5nW107XG4gICAgbnpMb2FkaW5nOiBib29sZWFuO1xuICAgIG56Tm90Rm91bmRDb250ZW50OiBzdHJpbmc7XG4gICAgbnpQbGFjZW1lbnQ6IE1lbnRpb25QbGFjZW1lbnQ7XG4gICAgbnpTdWdnZXN0aW9uczogTnpTYWZlQW55W107XG4gICAgcmVhZG9ubHkgbnpPblNlbGVjdDogRXZlbnRFbWl0dGVyPE56U2FmZUFueT47XG4gICAgcmVhZG9ubHkgbnpPblNlYXJjaENoYW5nZTogRXZlbnRFbWl0dGVyPE1lbnRpb25PblNlYXJjaFR5cGVzPjtcbiAgICB0cmlnZ2VyOiBOek1lbnRpb25UcmlnZ2VyRGlyZWN0aXZlO1xuICAgIHN1Z2dlc3Rpb25zVGVtcD86IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIHNldCBzdWdnZXN0aW9uQ2hpbGQodmFsdWU6IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBOelNhZmVBbnk7XG4gICAgfT4pO1xuICAgIGlzT3BlbjogYm9vbGVhbjtcbiAgICBmaWx0ZXJlZFN1Z2dlc3Rpb25zOiBzdHJpbmdbXTtcbiAgICBzdWdnZXN0aW9uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBOelNhZmVBbnk7XG4gICAgfT4gfCBudWxsO1xuICAgIGFjdGl2ZUluZGV4OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBwcmV2aW91c1ZhbHVlO1xuICAgIHByaXZhdGUgY3Vyc29yTWVudGlvbjtcbiAgICBwcml2YXRlIGN1cnNvck1lbnRpb25TdGFydD87XG4gICAgcHJpdmF0ZSBjdXJzb3JNZW50aW9uRW5kPztcbiAgICBwcml2YXRlIG92ZXJsYXlSZWY7XG4gICAgcHJpdmF0ZSBwb3J0YWw/O1xuICAgIHByaXZhdGUgcG9zaXRpb25TdHJhdGVneTtcbiAgICBwcml2YXRlIG92ZXJsYXlCYWNrZHJvcENsaWNrU3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgZ2V0IHRyaWdnZXJOYXRpdmVFbGVtZW50KCk7XG4gICAgY29uc3RydWN0b3IobmdEb2N1bWVudDogTnpTYWZlQW55LCBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBvdmVybGF5OiBPdmVybGF5LCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBuek1lbnRpb25TZXJ2aWNlOiBOek1lbnRpb25TZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY2xvc2VEcm9wZG93bigpOiB2b2lkO1xuICAgIG9wZW5Ecm9wZG93bigpOiB2b2lkO1xuICAgIGdldE1lbnRpb25zKCk6IHN0cmluZ1tdO1xuICAgIHNlbGVjdFN1Z2dlc3Rpb24oc3VnZ2VzdGlvbjogc3RyaW5nIHwge30pOiB2b2lkO1xuICAgIHByaXZhdGUgaGFuZGxlSW5wdXQ7XG4gICAgcHJpdmF0ZSBoYW5kbGVLZXlkb3duO1xuICAgIHByaXZhdGUgaGFuZGxlQ2xpY2s7XG4gICAgcHJpdmF0ZSBiaW5kVHJpZ2dlckV2ZW50cztcbiAgICBwcml2YXRlIHN1Z2dlc3Rpb25zRmlsdGVyO1xuICAgIHByaXZhdGUgcmVzZXREcm9wZG93bjtcbiAgICBwcml2YXRlIHNldE5leHRJdGVtQWN0aXZlO1xuICAgIHByaXZhdGUgc2V0UHJldmlvdXNJdGVtQWN0aXZlO1xuICAgIHByaXZhdGUgY2FuT3BlbjtcbiAgICBwcml2YXRlIHJlc2V0Q3Vyc29yTWVudGlvbjtcbiAgICBwcml2YXRlIHVwZGF0ZVBvc2l0aW9ucztcbiAgICBwcml2YXRlIHN1YnNjcmliZU92ZXJsYXlCYWNrZHJvcENsaWNrO1xuICAgIHByaXZhdGUgYXR0YWNoT3ZlcmxheTtcbiAgICBwcml2YXRlIGdldE92ZXJsYXlDb25maWc7XG4gICAgcHJpdmF0ZSBnZXRPdmVybGF5UG9zaXRpb247XG59XG4iXX0=